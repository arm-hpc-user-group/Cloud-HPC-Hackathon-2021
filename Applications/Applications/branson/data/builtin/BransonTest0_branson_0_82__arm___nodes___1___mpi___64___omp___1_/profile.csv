"depth","Self","Total","Child","MPI","Overhead","Regions","Function"
"0","21.9%","72.6%","50.7%","","","","transport_photon_particle_pass(Photon&, Mesh const&, RNG*, double&, double&, double&, std::vector<double, std::allocator<double"
"0","17.0%","17.0%","","","","","Mesh::get_on_rank_cell(unsigned int) const [inlined]"
"0","10.9%","10.9%","","","","","optr_gcc_exp_f64"
"0","8.0%","8.0%","","","","","optr_ac_log_f64"
"0","5.8%","5.8%","<0.1%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","4.5%","4.5%","","","","","Mesh::get_on_rank_cell(unsigned int) const [inlined]"
"0","3.0%","3.0%","","","","","syscall"
"0","2.4%","2.4%","","","","","threefry2x64_R(unsigned int, r123array2x64, r123array2x64) [inlined]"
"0","1.6%","1.6%","<0.1%","","","","cos"
"0","1.2%","1.2%","","1.2%","","","MPI_Barrier"
"0","1.1%","3.5%","2.4%","","","","Source::get_photon(RNG*, double const&)"
"0","1.0%","1.0%","","","","","Work_Packet::get_global_cell_ID() const [inlined]"
"0","1.0%","1.0%","","","","","Cell::get_f() const [inlined]"
"0","0.9%","0.9%","","","","","_ZSt4swapI11Work_PacketENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_ [inlined]"
"0","0.9%","0.9%","","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> const*, unsigned long) const [inlined]"
"0","0.9%","0.9%","","","","","malloc_consolidate"
"0","0.8%","0.8%","","","","","Cell::get_distance_to_boundary(double const*, double const*, unsigned int&) const [inlined]"
"0","0.8%","0.8%","","","","","(anonymous namespace)::_ran(unsigned long*) [inlined]"
"0","0.8%","0.8%","<0.1%","","","","sin"
"0","0.7%","0.7%","","","","","log@plt"
"0","0.6%","0.6%","","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Val_less_iter) [inlined]"
"0","0.5%","0.5%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","0.5%","0.5%","","","","","Cell::get_op_a(unsigned int) const [inlined]"
"0","0.4%","0.4%","","","","","std::equal_to<unsigned int>::operator()(unsigned int const&, unsigned int const&) const [inlined]"
"0","0.4%","0.4%","","","","","std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>::_M_next() const [inlined]"
"0","0.4%","0.8%","0.3%","","","","Work_Packet::uniform_position_in_cell(RNG*, double*) const [inlined]"
"0","0.4%","0.4%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","0.4%","0.4%","","","","","get_uniform_angle(double*, RNG*) [inlined]"
"0","0.4%","0.4%","","","","","r123::u01fixedpt<double, unsigned long>(unsigned long) [inlined]"
"0","0.4%","0.5%","<0.1%","","","","sample_emission_group(RNG*, Cell const&) [inlined]"
"0","0.4%","0.4%","","","","","std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Photon*>, Photon*>(std::move_iterator<Photon*>, std::move_iterator<Photon*>, Photon*) [inlined]"
"0","0.3%","0.3%","","","","","Photon::move(double) [inlined]"
"0","0.3%","0.3%","","","","","std::_Construct<Photon, Photon>(Photon*, Photon&&) [inlined]"
"0","0.3%","0.3%","","0.3%","","","MPI_Allreduce"
"0","0.3%","0.3%","","","","","std::_Construct<Work_Packet, Work_Packet>(Work_Packet*, Work_Packet&&) [inlined]"
"0","0.3%","0.3%","","","","","sgn<double>(double) [inlined]"
"0","0.3%","0.3%","<0.1%","","","","libmetis__Greedy_KWayCutOptimize"
"0","0.3%","0.3%","","","","","__gnu_cxx::new_allocator<Photon>::construct<Photon, Photon const&>(Photon*, Photon const&) [inlined]"
"0","0.2%","0.2%","","","","","Photon::get_E() const [inlined]"
"0","0.2%","0.2%","","","","","Work_Packet::attach_census_work(unsigned int, unsigned int) [inlined]"
"0","0.2%","0.2%","","","","","__gnu_cxx::new_allocator<Work_Packet>::construct<Work_Packet, Work_Packet const&>(Work_Packet*, Work_Packet const&) [inlined]"
"0","0.2%","0.2%","","","","","std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Work_Packet*>, Work_Packet*>(std::move_iterator<Work_Packet*>, std::move_iterator<Work_Packet*>, Work_Packet*) [inlined]"
"0","0.2%","1.2%","0.9%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int"
"0","0.2%","85.1%","84.9%","1.2%","","","replicated_transport(Source&, Mesh const&, IMC_State&, std::vector<double, std::allocator<double"
"0","0.2%","0.2%","","","","","exp@plt"
"0","0.2%","0.4%","0.2%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","0.2%","1.3%","1.1%","","","","_int_free"
"0","0.2%","0.2%","","","","","Mesh::get_on_rank_cell(unsigned int) const [inlined]"
"0","0.2%","0.2%","","","","","__aarch64_swp4_rel"
"0","0.2%","0.2%","","","","","Work_Packet::set_coor(double const*) [inlined]"
"0","0.2%","0.2%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","0.2%","0.2%","","","","","Mesh::on_processor(unsigned int const&) const [inlined]"
"0","0.2%","0.2%","","","","","Photon::get_distance_remaining() const [inlined]"
"0","0.2%","0.2%","","","","","pow_finite_optr_gcc"
"0","0.2%","0.2%","","","","","r123array2x64::incr(unsigned long long) [inlined]"
"0","0.2%","0.2%","","","","","Cell::get_volume() const [inlined]"
"0","0.2%","0.2%","","","","","Photon::get_cell() const [inlined]"
"0","0.2%","0.2%","","","","","Cell::get_ID() const [inlined]"
"0","0.2%","1.8%","1.6%","","","","Work_Local_Map::operator()(Work_Packet const&, Work_Packet const&)"
"0","0.1%","0.1%","","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Val_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Val_comp_iter<Work_Local_Map>) [inlined]"
"0","0.1%","0.2%","<0.1%","","","","_int_malloc"
"0","0.1%","0.1%","","","","","get_uniform_angle(double*, RNG*) [inlined]"
"0","0.1%","0.1%","","","","","__aarch64_cas8_rel"
"0","0.1%","0.1%","","","","","std::vector<double, std::allocator<double> >::operator[](unsigned long) [inlined]"
"0","0.1%","0.2%","<0.1%","","","","libmetis__Match_SHEM"
"0","0.1%","0.1%","","","","","Photon::below_cutoff(double) const [inlined]"
"0","0.1%","0.1%","","","","","__aarch64_cas4_acq"
"0","0.1%","3.3%","3.2%","","","","get_uniform_angle(double*, RNG*) [inlined]"
"0","<0.1%","2.2%","2.1%","","","","Source::get_emission_photon(Photon&, Work_Packet&, double const&, double const&, RNG*)"
"0","<0.1%","0.5%","0.4%","","","","malloc"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> const*, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","_ZSt4swapI10Proto_CellENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_ [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Cell::get_grip_ID() const [inlined]"
"0","<0.1%","2.6%","2.6%","0.1%","","","Mesh::Mesh(Input const&, MPI_Types const&, Info const&, IMC_Parameters const&)"
"0","<0.1%","<0.1%","","","","","libmetis__CreateCoarseGraph"
"0","<0.1%","<0.1%","","","","","Cell::get_cV() const [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::get_photon_E() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Construct<Proto_Cell, Proto_Cell>(Proto_Cell*, Proto_Cell&&) [inlined]"
"0","<0.1%","<0.1%","","","","","memset"
"0","<0.1%","<0.1%","","","","","free"
"0","<0.1%","<0.1%","","","","","Cell::get_T_r() const [inlined]"
"0","<0.1%","<0.1%","","","","","Cell::get_T_e() const [inlined]"
"0","<0.1%","<0.1%","","","","","Cell::Cell() [inlined]"
"0","<0.1%","<0.1%","","<0.1%","","","MPI_Isend"
"0","<0.1%","<0.1%","","<0.1%","","","MPI_Waitall"
"0","<0.1%","<0.1%","","","","","memcpy"
"0","<0.1%","<0.1%","","","","","std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<Proto_Cell>::construct<Proto_Cell, Proto_Cell const&>(Proto_Cell*, Proto_Cell const&) [inlined]"
"0","<0.1%","0.4%","0.3%","","","","Mesh::calculate_photon_energy(IMC_State&)"
"0","<0.1%","<0.1%","","","","","Photon::reflect(unsigned int) [inlined]"
"0","<0.1%","<0.1%","","<0.1%","","","MPI_Irecv"
"0","<0.1%","<0.1%","","","","","std::_Construct<Proto_Cell, Proto_Cell const&>(Proto_Cell*, Proto_Cell const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__Match_RM"
"0","<0.1%","<0.1%","","","","","Cell::get_region_ID() const [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::get_n_create() const [inlined]"
"0","<0.1%","7.2%","7.2%","","","","Source::post_lb_prepare_source()"
"0","<0.1%","<0.1%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>) [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Mesh::get_pre_window_allocation_cell(unsigned int const&) const [inlined]"
"0","<0.1%","1.2%","1.2%","","","","Source::Source(Mesh&, IMC_State&, unsigned long, double, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>::_M_next() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>) [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","0.3%","0.3%","","","","Mesh::update_temperature(std::vector<double, std::allocator<double"
"0","<0.1%","0.6%","0.5%","","","","operator new(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__ProjectKWayPartition"
"0","<0.1%","<0.1%","","","","","Proto_Cell::set_grip_ID(unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<std::pair<unsigned int const, unsigned int> >::construct<std::pair<unsigned int const, unsigned int>, std::pair<unsigned int const, unsigned int> const&>(std::pair<unsigned int const, unsigned int>*, std::pair<unsigned int const, unsigned int> const&) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool"
"0","<0.1%","<0.1%","","","","","std::vector<Photon, std::allocator<Photon> >::operator[](unsigned long) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Proto_Cell*>, Proto_Cell*>(std::move_iterator<Proto_Cell*>, std::move_iterator<Proto_Cell*>, Proto_Cell*) [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis__CreateCoarseGraphNoMask"
"0","<0.1%","<0.1%","","","","","Cell::get_T_s() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<Proto_Cell>::construct<Proto_Cell, Proto_Cell>(Proto_Cell*, Proto_Cell&&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*) [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Cell::get_ID() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_code_base<unsigned int, unsigned int, std::__detail::_Identity, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned int, false> const*, unsigned long) const [inlined]"
"0","<0.1%","0.8%","0.8%","","","","std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","<0.1%","","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Val_less_iter) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__FM_2WayCutRefine"
"0","<0.1%","<0.1%","","","","","libmetis__rpqGetTop"
"0","<0.1%","<0.1%","","","","","libmetis__rpqUpdate"
"0","<0.1%","<0.1%","","","","","std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const"
"0","<0.1%","<0.1%","","","","","Photon::set_group(unsigned int) [inlined]"
"0","<0.1%","1.3%","1.3%","","","","std::vector<Photon, std::allocator<Photon"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__make_heap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__irandArrayPermute"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true"
"0","<0.1%","<0.1%","","","","","operator delete(void*)@plt"
"0","<0.1%","1.5%","1.5%","","","","__gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>::operator()<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > > >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >) [inlined]"
"0","<0.1%","<0.1%","","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::size() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::min<double>(double const&, double const&) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","sysmalloc"
"0","<0.1%","0.4%","0.4%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis__rpqInsert"
"0","<0.1%","<0.1%","","","","","Proto_Cell::get_next_cell(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","","","","","pow@plt"
"0","<0.1%","<0.1%","","","","","sin@plt"
"0","<0.1%","<0.1%","","","","","Photon::get_group() const [inlined]"
"0","<0.1%","<0.1%","","","","","__dubcos"
"0","<0.1%","<0.1%","","","","","std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis__Project2WayPartition"
"0","<0.1%","<0.1%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>) [inlined]"
"0","<0.1%","0.9%","0.9%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int const&) [inlined]"
"0","<0.1%","<0.1%","","","","","malloc@plt"
"0","<0.1%","<0.1%","<0.1%","","","","Region::get_absorption_opacity(double) const [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::Work_Packet() [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::get_n_particles() const [inlined]"
"0","<0.1%","2.5%","2.5%","0.1%","","","replicate_mesh(Proto_Mesh&, MPI_Types const&, Info const&, unsigned int const&)"
"0","<0.1%","<0.1%","","","","","random_r"
"0","<0.1%","<0.1%","","","","","libmetis.iset"
"0","<0.1%","<0.1%","","","","","libmetis__rpqDelete"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Cell::sort_grip_ID(Proto_Cell const&, Proto_Cell const&)"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::attach_creation_work(double, unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const@plt"
"0","<0.1%","2.5%","2.5%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>) [inlined]"
"0","<0.1%","<0.1%","","","","","operator new(unsigned long)@plt"
"0","<0.1%","<0.1%","","","","","__dubsin"
"0","<0.1%","<0.1%","","","","","cos@plt"
"0","<0.1%","<0.1%","","","","","replicate_mesh(Proto_Mesh&, MPI_Types const&, Info const&, unsigned int const&)"
"0","<0.1%","<0.1%","","","","","std::pair<unsigned int const, unsigned int>::pair<unsigned int&&, 0ul>(std::tuple<unsigned int&&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [inlined]"
"0","<0.1%","<0.1%","","","","","overdecompose_mesh(Proto_Mesh&, unsigned int)"
"0","<0.1%","<0.1%","","","","","libmetis.isum"
"0","<0.1%","0.3%","0.3%","","","","libmetis__CoarsenGraph"
"0","<0.1%","<0.1%","","","","","libmetis__Compute2WayPartitionParams"
"0","<0.1%","<0.1%","","","","","libmetis__cnbrpoolGetNext"
"0","<0.1%","0.3%","0.3%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*, unsigned long) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","Proto_Mesh::renumber_local_cell_indices(std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned int, false>*) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__move_median_to_first<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*, unsigned long) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Prime_rehash_policy::_M_state() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, Cell>, std::allocator<std::pair<unsigned int const, Cell> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::at(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","__docos"
"0","<0.1%","<0.1%","","","","","std::vector<Photon, std::allocator<Photon"
"0","<0.1%","<0.1%","","","","","Photon::set_E0(double) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","Source::get_initial_census_photon(Photon&, Work_Packet&, double const&, double const&, RNG*)"
"0","<0.1%","<0.1%","","","","","Photon::set_position(double const*) [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::get_census_index() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__make_heap<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","get_photon_list_E(std::vector<Photon, std::allocator<Photon> > const&) [inlined]"
"0","<0.1%","99.9%","99.9%","1.7%","","","main(int, char**)"
"0","<0.1%","<0.1%","<0.1%","","","","Buffer<Proto_Cell>::fill(std::vector<Proto_Cell, std::allocator<Proto_Cell> >)"
"0","<0.1%","0.1%","0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::operator=(std::vector<Proto_Cell, std::allocator<Proto_Cell> > const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::size() const [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::vector(std::vector<Proto_Cell, std::allocator<Proto_Cell> > const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*, Proto_Cell>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_copy<__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::push_back(Proto_Cell&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::emplace_back<Proto_Cell>(Proto_Cell&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<Proto_Cell> >::construct<Proto_Cell, Proto_Cell>(std::allocator<Proto_Cell>&, Proto_Cell*, Proto_Cell&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_realloc_insert<Proto_Cell>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_move_if_noexcept_a<Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell> >(Proto_Cell*, Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy_a<std::move_iterator<Proto_Cell*>, Proto_Cell*, Proto_Cell>(std::move_iterator<Proto_Cell*>, std::move_iterator<Proto_Cell*>, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_copy<std::move_iterator<Proto_Cell*>, Proto_Cell*>(std::move_iterator<Proto_Cell*>, std::move_iterator<Proto_Cell*>, Proto_Cell*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Proto_Cell*>, Proto_Cell*>(std::move_iterator<Proto_Cell*>, std::move_iterator<Proto_Cell*>, Proto_Cell*)"
"0","<0.1%","0.2%","0.2%","","","","std::_Vector_base<Proto_Cell, std::allocator<Proto_Cell> >::_M_deallocate(Proto_Cell*, unsigned long)"
"0","<0.1%","0.2%","0.2%","","","","std::allocator_traits<std::allocator<Proto_Cell> >::deallocate(std::allocator<Proto_Cell>&, Proto_Cell*, unsigned long)"
"0","<0.1%","0.2%","0.2%","","","","__gnu_cxx::new_allocator<Proto_Cell>::deallocate(Proto_Cell*, unsigned long) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","systrim"
"0","<0.1%","0.2%","0.2%","","","","__default_morecore"
"0","<0.1%","0.2%","0.2%","","","","sbrk"
"0","<0.1%","0.2%","0.2%","","","","ofi_intercept_brk"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::~vector()"
"0","<0.1%","0.2%","0.2%","","","","std::_Vector_base<Proto_Cell, std::allocator<Proto_Cell> >::~_Vector_base()"
"0","<0.1%","2.8%","2.8%","","","","ofi_intercept_munmap"
"0","<0.1%","0.1%","0.1%","","","","Proto_Mesh::add_mesh_cell(Proto_Cell) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_realloc_insert<Proto_Cell const&>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<Proto_Cell> >::construct<Proto_Cell, Proto_Cell const&>(std::allocator<Proto_Cell>&, Proto_Cell*, Proto_Cell const&)"
"0","<0.1%","<0.1%","<0.1%","","","","Buffer<Proto_Cell>::resize(unsigned int)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::resize(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_default_append(unsigned long) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","std::vector<Buffer<Proto_Cell>, std::allocator<Buffer<Proto_Cell> > >::clear()"
"0","<0.1%","0.1%","0.1%","","","","std::vector<Buffer<Proto_Cell>, std::allocator<Buffer<Proto_Cell> > >::_M_erase_at_end(Buffer<Proto_Cell>*)"
"0","<0.1%","0.1%","0.1%","","","","std::_Destroy<Buffer<Proto_Cell>*, Buffer<Proto_Cell> >(Buffer<Proto_Cell>*, Buffer<Proto_Cell>*, std::allocator<Buffer<Proto_Cell> >&)"
"0","<0.1%","0.1%","0.1%","","","","std::_Destroy<Buffer<Proto_Cell>*>(Buffer<Proto_Cell>*, Buffer<Proto_Cell>*)"
"0","<0.1%","0.1%","0.1%","","","","std::_Destroy_aux<false>::__destroy<Buffer<Proto_Cell>*>(Buffer<Proto_Cell>*, Buffer<Proto_Cell>*)"
"0","<0.1%","0.1%","0.1%","","","","std::_Destroy<Buffer<Proto_Cell> >(Buffer<Proto_Cell>*)"
"0","<0.1%","0.1%","0.1%","","","","Buffer<Proto_Cell>::~Buffer()"
"0","<0.1%","0.4%","0.4%","","","","Proto_Mesh::set_post_decomposition_mesh_cells(std::vector<int, std::allocator<int"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::insert<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, void>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, std::__false_type)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_range_insert<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, std::forward_iterator_tag)"
"0","<0.1%","<0.1%","<0.1%","","","","std::distance<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::size() const [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >)"
"0","<0.1%","0.2%","0.2%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","0.2%","0.2%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, long, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","0.2%","0.2%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","0.2%","0.2%","","","","__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >::operator+(long) const [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","0.9%","0.9%","","","","overdecompose_mesh(Proto_Mesh&, unsigned int)"
"0","<0.1%","0.3%","0.3%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::operator[](unsigned int&&)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int&&)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<unsigned int&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<unsigned int&&>&&, std::tuple<>&&)"
"0","<0.1%","0.4%","0.4%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::pair<unsigned int const, unsigned int> > >::construct<std::pair<unsigned int const, unsigned int>, std::piecewise_construct_t const&, std::tuple<unsigned int&&>, std::tuple<> >(std::allocator<std::pair<unsigned int const, unsigned int> >&, std::pair<unsigned int const, unsigned int>*, std::piecewise_construct_t const&, std::tuple<unsigned int&&>&&, std::tuple<>&&)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::pair<unsigned int const, unsigned int> >::construct<std::pair<unsigned int const, unsigned int>, std::piecewise_construct_t const&, std::tuple<unsigned int&&>, std::tuple<> >(std::pair<unsigned int const, unsigned int>*, std::piecewise_construct_t const&, std::tuple<unsigned int&&>&&, std::tuple<>&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::pair<unsigned int const, unsigned int>::pair<unsigned int&&>(std::piecewise_construct_t, std::tuple<unsigned int&&>, std::tuple<>)"
"0","<0.1%","0.2%","0.2%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int&&) [inlined]"
"0","<0.1%","1.1%","1.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_buckets(unsigned long) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::find(unsigned int const&)"
"0","<0.1%","0.2%","0.2%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(unsigned int const&)"
"0","<0.1%","0.6%","0.6%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","0.2%","0.2%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Hashtable_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*) const"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Equal_helper<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::equal_to<unsigned int>, unsigned long, false>::_S_equals(std::equal_to<unsigned int> const&, std::__detail::_Select1st const&, unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::push_back(int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move_a2<true, int*, int*>(int*, int*, int*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move_a<true, int*, int*>(int*, int*, int*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [inlined]"
"0","<0.1%","0.6%","0.6%","","","","METIS_PartGraphKway"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__SetupGraph"
"0","<0.1%","0.6%","0.6%","","","","libmetis__MlevelKWayPartitioning"
"0","<0.1%","<0.1%","<0.1%","","","","rand"
"0","<0.1%","<0.1%","<0.1%","","","","random"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__InitKWayPartitioning"
"0","<0.1%","<0.1%","<0.1%","","","","METIS_PartGraphRecursive"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__MlevelRecursiveBisection"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__MultilevelBisect"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__Refine2Way"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__Init2WayPartition"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__GrowBisection"
"0","<0.1%","0.3%","0.3%","","","","libmetis__RefineKWay"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__FreeGraph"
"0","<0.1%","<0.1%","<0.1%","","","","gk_free"
"0","<0.1%","0.2%","0.2%","","","","Proto_Mesh::sort_cells_by_grip_ID()"
"0","<0.1%","0.2%","0.2%","","","","std::sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, bool (*)(Proto_Cell const&, Proto_Cell const&)>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, bool (*)(Proto_Cell const&, Proto_Cell const&))"
"0","<0.1%","0.2%","0.2%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","0.2%","0.2%","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::iter_swap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>::operator()<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","1.6%","1.6%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::~unordered_map()"
"0","<0.1%","1.6%","1.6%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [inlined]"
"0","<0.1%","0.8%","0.8%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()"
"0","<0.1%","0.8%","0.8%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*)"
"0","<0.1%","0.3%","0.3%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*)"
"0","<0.1%","0.3%","0.3%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >&, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*, unsigned long)"
"0","<0.1%","0.8%","0.8%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()"
"0","<0.1%","0.8%","0.8%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)"
"0","<0.1%","0.8%","0.8%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)"
"0","<0.1%","0.9%","0.9%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long)"
"0","<0.1%","0.9%","0.9%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::~vector()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<int, std::allocator<int> >::~_Vector_base()"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::set_grip_ID_using_cell_index()"
"0","<0.1%","1.6%","1.6%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::operator[](unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::get_grip_map() const"
"0","<0.1%","0.6%","0.6%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*) const"
"0","<0.1%","0.3%","0.3%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<unsigned int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<unsigned int const&>&&, std::tuple<>&&)"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::get_new_global_index_map() const"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::unordered_map(std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > > const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> const*) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_node<std::pair<unsigned int const, unsigned int> const&>(std::pair<unsigned int const, unsigned int> const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::pair<unsigned int const, unsigned int> > >::construct<std::pair<unsigned int const, unsigned int>, std::pair<unsigned int const, unsigned int> const&>(std::allocator<std::pair<unsigned int const, unsigned int> >&, std::pair<unsigned int const, unsigned int>*, std::pair<unsigned int const, unsigned int> const&)"
"0","<0.1%","0.1%","0.1%","","","","Proto_Mesh::get_boundary_neighbors() const"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int> >::insert(unsigned int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Insert<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true>::insert(unsigned int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned int, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned int, false> > > >(unsigned int&&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned int, false> > > const&, std::integral_constant<bool, true>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned int, false>*) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_base<unsigned int, unsigned int, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<unsigned int, false>*) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Equal_helper<unsigned int, unsigned int, std::__detail::_Identity, std::equal_to<unsigned int>, unsigned long, false>::_S_equals(std::equal_to<unsigned int> const&, std::__detail::_Identity const&, unsigned int const&, unsigned long, std::__detail::_Hash_node<unsigned int, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::operator()<unsigned int>(unsigned int&&) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::_M_allocate_node<unsigned int>(unsigned int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::allocate(std::allocator<std::__detail::_Hash_node<unsigned int, false> >&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned int, false> >::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned int, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned int, false> > > >(unsigned int&&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned int, false> > > const&, std::integral_constant<bool, true>) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::_M_allocate_buckets(unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int> >::find(unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int> >::~unordered_set()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned int, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned int, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<unsigned int, false> >&, std::__detail::_Hash_node<unsigned int, false>*, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned int, false> >::deallocate(std::__detail::_Hash_node<unsigned int, false>*, unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int const&, unsigned long, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::~Proto_Mesh()"
"0","<0.1%","97.2%","97.2%","1.5%","","","imc_replicated_driver(Mesh&, IMC_State&, IMC_Parameters const&, MPI_Types const&, Info const&)"
"0","<0.1%","<0.1%","<0.1%","","","","Mesh::get_census_E() const"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::allocator_traits<std::allocator<Work_Packet> >::construct<Work_Packet, Work_Packet const&>(std::allocator<Work_Packet>&, Work_Packet*, Work_Packet const&)"
"0","<0.1%","0.6%","0.6%","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::_M_realloc_insert<Work_Packet const&>(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, Work_Packet const&)"
"0","<0.1%","0.5%","0.5%","","","","std::__uninitialized_move_if_noexcept_a<Work_Packet*, Work_Packet*, std::allocator<Work_Packet> >(Work_Packet*, Work_Packet*, Work_Packet*, std::allocator<Work_Packet>&)"
"0","<0.1%","0.5%","0.5%","","","","std::__uninitialized_copy_a<std::move_iterator<Work_Packet*>, Work_Packet*, Work_Packet>(std::move_iterator<Work_Packet*>, std::move_iterator<Work_Packet*>, Work_Packet*, std::allocator<Work_Packet>&)"
"0","<0.1%","0.5%","0.5%","","","","std::uninitialized_copy<std::move_iterator<Work_Packet*>, Work_Packet*>(std::move_iterator<Work_Packet*>, std::move_iterator<Work_Packet*>, Work_Packet*)"
"0","<0.1%","0.3%","0.3%","","","","std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Work_Packet*>, Work_Packet*>(std::move_iterator<Work_Packet*>, std::move_iterator<Work_Packet*>, Work_Packet*)"
"0","<0.1%","0.6%","0.6%","","","","std::_Vector_base<Work_Packet, std::allocator<Work_Packet> >::_M_deallocate(Work_Packet*, unsigned long)"
"0","<0.1%","0.6%","0.6%","","","","std::allocator_traits<std::allocator<Work_Packet> >::deallocate(std::allocator<Work_Packet>&, Work_Packet*, unsigned long)"
"0","<0.1%","0.6%","0.6%","","","","__gnu_cxx::new_allocator<Work_Packet>::deallocate(Work_Packet*, unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<Work_Packet, std::allocator<Work_Packet> >::_M_allocate(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<Work_Packet> >::allocate(std::allocator<Work_Packet>&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<Work_Packet>::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","Mesh::get_emission_E() const"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_fill_n_a<double*, unsigned long, double, double>(double*, unsigned long, double const&, std::allocator<double>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_fill_n<true>::__uninit_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> const*, unsigned long) const"
"0","<0.1%","0.3%","0.3%","","","","std::unordered_map<unsigned int, bool, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, bool> > >::operator[](unsigned int const&)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int const&)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<unsigned int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<unsigned int const&>&&, std::tuple<>&&)"
"0","<0.1%","0.1%","0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >&, unsigned long)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int const&) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> const*, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_allocate_buckets(unsigned long) [inlined]"
"0","<0.1%","0.8%","0.8%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","2.9%","2.9%","","","","std::sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, Work_Local_Map>(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, Work_Local_Map)"
"0","<0.1%","2.9%","2.9%","","","","std::__sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>) [inlined]"
"0","<0.1%","2.5%","2.5%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>)"
"0","<0.1%","2.4%","2.4%","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>)"
"0","<0.1%","0.9%","0.9%","","","","std::iter_swap<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > > >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >)"
"0","<0.1%","0.9%","0.9%","","","","std::unordered_map<unsigned int, bool, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, bool> > >::operator[](unsigned int&&)"
"0","<0.1%","0.9%","0.9%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int&&)"
"0","<0.1%","0.3%","0.3%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","0.3%","0.3%","","","","std::__detail::_Hashtable_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*) const"
"0","<0.1%","0.3%","0.3%","","","","std::__detail::_Equal_helper<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::equal_to<unsigned int>, unsigned long, false>::_S_equals(std::equal_to<unsigned int> const&, std::__detail::_Select1st const&, unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int const&, unsigned long, unsigned long) const"
"0","<0.1%","0.4%","0.4%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","0.4%","0.4%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>)"
"0","<0.1%","0.2%","0.2%","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Val_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Val_comp_iter<Work_Local_Map>)"
"0","<0.1%","0.2%","0.2%","","","","__gnu_cxx::__ops::_Val_comp_iter<Work_Local_Map>::operator()<Work_Packet, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > > >(Work_Packet&, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::unordered_map<unsigned int, bool, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, bool> > >::~unordered_map()"
"0","<0.1%","0.2%","0.2%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >&, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)"
"0","<0.1%","0.2%","0.2%","","","","Mesh::get_on_rank_cell(unsigned int) const"
"0","<0.1%","3.7%","3.7%","","","","RNG::generate_random_number() const"
"0","<0.1%","2.9%","2.9%","","","","(anonymous namespace)::_ran(unsigned long*)"
"0","<0.1%","2.4%","2.4%","","","","r123::Threefry2x64_R<20u>::operator()(r123array2x64, r123array2x64)"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_map<unsigned int, Cell, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, Cell> > >::at(unsigned int const&) const"
"0","<0.1%","0.3%","0.3%","","","","Cell::get_distance_to_boundary(double const*, double const*, unsigned int&) const"
"0","<0.1%","1.0%","1.0%","","","","std::vector<Photon, std::allocator<Photon> >::_M_realloc_insert<Photon const&>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, Photon const&)"
"0","<0.1%","0.7%","0.7%","","","","std::__uninitialized_move_if_noexcept_a<Photon*, Photon*, std::allocator<Photon> >(Photon*, Photon*, Photon*, std::allocator<Photon>&)"
"0","<0.1%","0.7%","0.7%","","","","std::__uninitialized_copy_a<std::move_iterator<Photon*>, Photon*, Photon>(std::move_iterator<Photon*>, std::move_iterator<Photon*>, Photon*, std::allocator<Photon>&)"
"0","<0.1%","0.7%","0.7%","","","","std::uninitialized_copy<std::move_iterator<Photon*>, Photon*>(std::move_iterator<Photon*>, std::move_iterator<Photon*>, Photon*)"
"0","<0.1%","0.3%","0.3%","","","","std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Photon*>, Photon*>(std::move_iterator<Photon*>, std::move_iterator<Photon*>, Photon*)"
"0","<0.1%","2.1%","2.1%","","","","std::_Vector_base<Photon, std::allocator<Photon> >::_M_deallocate(Photon*, unsigned long)"
"0","<0.1%","2.1%","2.1%","","","","std::allocator_traits<std::allocator<Photon> >::deallocate(std::allocator<Photon>&, Photon*, unsigned long)"
"0","<0.1%","2.1%","2.1%","","","","__gnu_cxx::new_allocator<Photon>::deallocate(Photon*, unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<Photon, std::allocator<Photon> >::_M_allocate(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<Photon> >::allocate(std::allocator<Photon>&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<Photon>::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","0.3%","0.3%","","","","std::allocator_traits<std::allocator<Photon> >::construct<Photon, Photon const&>(std::allocator<Photon>&, Photon*, Photon const&)"
"0","<0.1%","6.4%","6.4%","","","","std::sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > > >(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >)"
"0","<0.1%","5.8%","5.8%","","","","std::__sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","5.8%","5.8%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, long, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","5.8%","5.8%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","5.8%","5.8%","","","","__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >::operator+(long) const [inlined]"
"0","<0.1%","0.6%","0.6%","","","","std::__sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","0.6%","0.6%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","0.6%","0.6%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Val_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::__ops::_Val_less_iter::operator()<Photon, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > > >(Photon&, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >) const"
"0","<0.1%","<0.1%","<0.1%","","","","Photon::operator<(Photon const&) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::assign(unsigned long, double const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double"
"0","<0.1%","0.6%","0.6%","","","","Source::~Source()"
"0","<0.1%","0.6%","0.6%","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::~vector()"
"0","<0.1%","0.6%","0.6%","","","","std::_Vector_base<Work_Packet, std::allocator<Work_Packet> >::~_Vector_base()"
"0","<0.1%","<0.1%","<0.1%","<0.1%","","","IMC_State::print_conservation(unsigned int)"
"0","<0.1%","0.2%","0.2%","","","","get_photon_list_E(std::vector<Photon, std::allocator<Photon> > const&)"
"0","<0.1%","1.6%","1.6%","","","","std::vector<Photon, std::allocator<Photon> >::operator=(std::vector<Photon, std::allocator<Photon> >&&)"
"0","<0.1%","1.6%","1.6%","","","","std::vector<Photon, std::allocator<Photon> >::_M_move_assign(std::vector<Photon, std::allocator<Photon> >&&, std::integral_constant<bool, true>)"
"0","<0.1%","1.8%","1.8%","","","","std::vector<Photon, std::allocator<Photon> >::~vector()"
"0","<0.1%","1.8%","1.8%","","","","std::_Vector_base<Photon, std::allocator<Photon> >::~_Vector_base()"
"0","<0.1%","<0.1%","<0.1%","","","","Mesh::initialize_physical_properties(Input const&)"
"0","<0.1%","<0.1%","<0.1%","","","","<unknown>"
