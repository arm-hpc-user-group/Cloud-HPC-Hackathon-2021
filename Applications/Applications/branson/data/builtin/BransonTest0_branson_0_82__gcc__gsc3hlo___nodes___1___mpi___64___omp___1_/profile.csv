"depth","Self","Total","Child","MPI","Overhead","Regions","Function"
"0","20.1%","20.1%","","","","","__memcpy_simd"
"0","16.1%","73.2%","57.2%","","","","transport_photon_particle_pass(Photon&, Mesh const&, RNG*, double&, double&, double&, std::vector<double, std::allocator<double"
"0","10.5%","10.5%","","","","","__log_finite"
"0","6.2%","6.2%","","","","","log"
"0","5.2%","5.2%","","","","","Cell::get_distance_to_boundary(double const*, double const*, unsigned int&) const [inlined]"
"0","5.0%","5.0%","","","","","__exp_finite"
"0","4.0%","9.0%","5.0%","","","","exp"
"0","2.8%","2.8%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","2.6%","2.6%","","","","","transport_photon_particle_pass(Photon&, Mesh const&, RNG*, double&, double&, double&, std::vector<double, std::allocator<double"
"0","2.4%","2.4%","","","","","syscall"
"0","2.1%","2.1%","<0.1%","","","","sincos"
"0","2.1%","2.1%","","","","","threefry2x64_R [inlined]"
"0","1.9%","1.9%","","1.9%","","","MPI_Barrier"
"0","1.3%","1.3%","","","","","std::swap<Photon>(Photon&, Photon&) [inlined]"
"0","0.8%","0.8%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","0.7%","0.7%","","","","","log@plt"
"0","0.7%","3.4%","2.7%","","","","RNG::generate_random_number() const [inlined]"
"0","0.7%","2.4%","1.8%","","","","Source::get_photon(RNG*, double const&)"
"0","0.7%","0.7%","","","","","std::hash<unsigned int>::operator()(unsigned int) const [inlined]"
"0","0.6%","0.6%","","","","","malloc_consolidate"
"0","0.6%","0.6%","","","","","std::swap<Work_Packet>(Work_Packet&, Work_Packet&) [inlined]"
"0","0.6%","0.6%","","","","","Work_Local_Map::operator()(Work_Packet const&, Work_Packet const&) [inlined]"
"0","0.6%","17.3%","16.8%","","","","Mesh::get_on_rank_cell(unsigned int) const [inlined]"
"0","0.5%","0.5%","","","","","__gnu_cxx::new_allocator<Photon>::construct<Photon, Photon>(Photon*, Photon&&) [inlined]"
"0","0.4%","0.5%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","0.4%","0.4%","","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","0.4%","0.4%","","","","","__gnu_cxx::new_allocator<Photon>::construct<Photon, Photon const&>(Photon*, Photon const&) [inlined]"
"0","0.4%","0.4%","","0.4%","","","MPI_Allreduce"
"0","0.4%","0.4%","","","","","std::equal_to<unsigned int>::operator()(unsigned int const&, unsigned int const&) const [inlined]"
"0","0.4%","0.4%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","0.3%","0.3%","","","","","std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>::_M_next() const [inlined]"
"0","0.3%","2.7%","2.3%","","","","(anonymous namespace)::_ran(r123array2x64::value_type*)"
"0","0.3%","0.3%","","","","","Work_Packet::uniform_position_in_cell(RNG*, double*) const [inlined]"
"0","0.3%","0.3%","","","","","__gnu_cxx::new_allocator<Work_Packet>::construct<Work_Packet, Work_Packet>(Work_Packet*, Work_Packet&&) [inlined]"
"0","0.3%","0.5%","0.2%","","","","__pow_finite"
"0","0.3%","0.3%","","","","","exp@plt"
"0","0.3%","2.4%","2.1%","","","","get_uniform_angle(double*, RNG*) [inlined]"
"0","0.2%","0.2%","","","","","__exp1"
"0","0.2%","0.2%","","","","","r123::u01fixedpt<double, unsigned long> [inlined]"
"0","0.2%","0.2%","","","","","get_photon_list_E(std::vector<Photon, std::allocator<Photon> > const&) [inlined]"
"0","0.2%","1.1%","0.9%","","","","_int_free"
"0","0.2%","0.2%","<0.1%","","","","libmetis__Greedy_KWayCutOptimize"
"0","0.2%","0.2%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","0.2%","87.1%","86.9%","1.8%","","","replicated_transport(Source&, Mesh const&, IMC_State&, std::vector<double, std::allocator<double"
"0","0.2%","0.2%","","","","","__aarch64_swp4_rel"
"0","0.2%","0.2%","","","","","Photon::move(double) [inlined]"
"0","0.2%","0.2%","","","","","Work_Packet::attach_census_work(unsigned int, unsigned int) [inlined]"
"0","0.2%","0.2%","","","","","memcpy@plt"
"0","0.2%","0.2%","","","","","Work_Packet::get_global_cell_ID() const [inlined]"
"0","0.1%","0.2%","<0.1%","","","","_int_malloc"
"0","0.1%","0.1%","","","","","Work_Packet::set_coor(double const*) [inlined]"
"0","0.1%","0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [inlined]"
"0","0.1%","0.1%","","","","","Photon::get_cell() const [inlined]"
"0","0.1%","0.1%","","","","","Mesh::on_processor(unsigned int const&) const [inlined]"
"0","0.1%","0.1%","","","","","Photon::get_distance_remaining() const [inlined]"
"0","0.1%","0.1%","","","","","__gnu_cxx::new_allocator<Work_Packet>::construct<Work_Packet, Work_Packet const&>(Work_Packet*, Work_Packet const&) [inlined]"
"0","0.1%","0.3%","0.2%","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","0.1%","0.1%","","","","","Cell::get_volume() const [inlined]"
"0","0.1%","0.1%","","","","","libmetis__CreateCoarseGraph"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned int const&) const [inlined]"
"0","<0.1%","0.9%","0.8%","","","","std::vector<Photon, std::allocator<Photon> >::push_back(Photon const&) [inlined]"
"0","<0.1%","<0.1%","","<0.1%","","","MPI_Waitall"
"0","<0.1%","<0.1%","","","","","Photon::set_E(double) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__relocate_a_1<Photon*, Photon*, std::allocator<Photon> >(Photon*, Photon*, Photon*, std::allocator<Photon>&) [inlined]"
"0","<0.1%","0.5%","0.4%","","","","malloc"
"0","<0.1%","<0.1%","","","","","__aarch64_cas8_rel"
"0","<0.1%","<0.1%","","","","","Work_Packet::set_global_cell_ID(unsigned int const&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hashtable_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*) const [inlined]"
"0","<0.1%","0.2%","<0.1%","","","","Mesh::update_temperature(std::vector<double, std::allocator<double"
"0","<0.1%","<0.1%","","","","","Work_Packet::get_photon_E() const [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Cell::sort_grip_ID(Proto_Cell const&, Proto_Cell const&)"
"0","<0.1%","<0.1%","","","","","Source::post_lb_prepare_source()"
"0","<0.1%","<0.1%","","","","","__aarch64_cas4_acq"
"0","<0.1%","2.5%","2.4%","0.2%","","","Mesh::Mesh(Input const&, MPI_Types const&, Info const&, IMC_Parameters const&)"
"0","<0.1%","<0.1%","","","","","r123array2x64::incr(unsigned long long) [inlined]"
"0","<0.1%","1.0%","0.9%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool"
"0","<0.1%","<0.1%","","","","","transport_photon_particle_pass(Photon&, Mesh const&, RNG*, double&, double&, double&, std::vector<double, std::allocator<double"
"0","<0.1%","<0.1%","","","","","transport_photon_particle_pass(Photon&, Mesh const&, RNG*, double&, double&, double&, std::vector<double, std::allocator<double"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> const*, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","<0.1%","","","MPI_Isend"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<Work_Packet>::construct<Work_Packet, Work_Packet const&>(Work_Packet*, Work_Packet const&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__relocate_a_1<Work_Packet*, Work_Packet*, std::allocator<Work_Packet> >(Work_Packet*, Work_Packet*, Work_Packet*, std::allocator<Work_Packet>&) [inlined]"
"0","<0.1%","0.2%","0.1%","","","","libmetis__Match_SHEM"
"0","<0.1%","<0.1%","","<0.1%","","","MPI_Finalize"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__Match_RM"
"0","<0.1%","<0.1%","","","","","Work_Local_Map::operator()(Work_Packet const&, Work_Packet const&) [inlined]"
"0","<0.1%","<0.1%","","","","","memset"
"0","<0.1%","<0.1%","","","","","free"
"0","<0.1%","1.6%","1.6%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int"
"0","<0.1%","1.0%","1.0%","","","","std::unordered_map<unsigned int, bool, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, bool> > >::operator[](unsigned int&&) [inlined]"
"0","<0.1%","<0.1%","","","","","sgn<double>(double) [inlined]"
"0","<0.1%","1.7%","1.6%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int"
"0","<0.1%","<0.1%","","","","","std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [inlined]"
"0","<0.1%","0.6%","0.5%","","","","pow"
"0","<0.1%","<0.1%","","","","","Work_Local_Map::operator()(Work_Packet const&, Work_Packet const&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<Photon>::construct<Photon, Photon>(Photon*, Photon&&) [inlined]"
"0","<0.1%","<0.1%","","","","","Mesh::calculate_photon_energy(IMC_State&)"
"0","<0.1%","5.9%","5.9%","","","","Source::post_lb_prepare_source()"
"0","<0.1%","<0.1%","","","","","Cell::get_distance_to_boundary(double const*, double const*, unsigned int&) const [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >::construct<std::pair<unsigned int const, unsigned int>, std::pair<unsigned int const, unsigned int> const&>(std::pair<unsigned int const, unsigned int>*, std::pair<unsigned int const, unsigned int> const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__ProjectKWayPartition"
"0","<0.1%","0.4%","0.4%","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::push_back(Work_Packet const&) [inlined]"
"0","<0.1%","0.5%","0.5%","","","","Mesh::calculate_photon_energy(IMC_State&)"
"0","<0.1%","<0.1%","","","","","std::swap<Photon>(Photon&, Photon&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hashtable_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*) const [inlined]"
"0","<0.1%","<0.1%","","","","","Source::get_initial_census_photon(Photon&, Work_Packet&, double const&, double const&, RNG*) [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Cell::get_grip_ID() const [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__fill_a1<double*, double>(double*, double*, double const&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>) [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >::operator--() [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis__CreateCoarseGraphNoMask"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","Cell::get_next_cell(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","","","","","sincos@plt"
"0","<0.1%","<0.1%","","<0.1%","","","MPI_Irecv"
"0","<0.1%","<0.1%","<0.1%","","","","std::__adjust_heap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__FM_2WayCutRefine"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*) [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*) [inlined]"
"0","<0.1%","<0.1%","","","","","std::hash<unsigned int>::operator()(unsigned int) const [inlined]"
"0","<0.1%","<0.1%","","","","","Cell::get_bc(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis__rpqInsert"
"0","<0.1%","1.3%","1.3%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::operator[](unsigned int const&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","Cell::get_T_e() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const@plt"
"0","<0.1%","<0.1%","","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::size() const [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis__rpqUpdate"
"0","<0.1%","<0.1%","","","","","Proto_Mesh::get_pre_window_allocation_cell(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","","","","","operator delete(void*)@plt"
"0","<0.1%","<0.1%","","","","","Proto_Cell::get_next_cell(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>::_M_next() const [inlined]"
"0","<0.1%","<0.1%","","","","","__dubsin"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__irandArrayPermute"
"0","<0.1%","<0.1%","","","","","libmetis__rpqGetTop"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<Work_Packet>::construct<Work_Packet, Work_Packet>(Work_Packet*, Work_Packet&&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::set_group(unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::set_angle(double const*) [inlined]"
"0","<0.1%","<0.1%","","","","","Source::get_emission_photon(Photon&, Work_Packet&, double const&, double const&, RNG*) [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis.iset"
"0","<0.1%","<0.1%","","","","","libmetis__BucketSortKeysInc"
"0","<0.1%","<0.1%","","","","","libmetis__rpqDelete"
"0","<0.1%","<0.1%","","","","","Proto_Cell::set_grip_ID(unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","std::vector<double, std::allocator<double> >::operator[](unsigned long) [inlined]"
"0","<0.1%","<0.1%","","","","","Cell::get_cV() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","","","","","Source::get_photon(RNG*, double const&)"
"0","<0.1%","<0.1%","","","","","Cell::get_region_ID() const [inlined]"
"0","<0.1%","0.2%","0.2%","","","","sbrk"
"0","<0.1%","0.8%","0.8%","","","","overdecompose_mesh(Proto_Mesh&, unsigned int)"
"0","<0.1%","<0.1%","<0.1%","","","","random"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::emplace_back<int>(int&&) [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Mesh::get_new_global_index_map() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","Mesh::Mesh(Input const&, MPI_Types const&, Info const&, IMC_Parameters const&)"
"0","<0.1%","<0.1%","","","","","Cell::Cell(Proto_Cell const&) [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::attach_creation_work(double, unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","malloc@plt"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned int const&) const [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::reflect(unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","std::vector<Photon, std::allocator<Photon> >::operator[](unsigned long) [inlined]"
"0","<0.1%","5.0%","5.0%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","<0.1%","<0.1%","","","","sysmalloc"
"0","<0.1%","<0.1%","<0.1%","","","","std::swap<Proto_Cell>(Proto_Cell&, Proto_Cell&) [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Cell::get_ID() const [inlined]"
"0","<0.1%","<0.1%","","","","","libmetis__SplitGraphPart"
"0","<0.1%","<0.1%","","","","","libmetis__Project2WayPartition"
"0","<0.1%","<0.1%","","","","","libmetis__Compute2WayPartitionParams"
"0","<0.1%","0.2%","0.2%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::find(unsigned int const&) [inlined]"
"0","<0.1%","0.3%","0.3%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::operator[](unsigned int&&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>) [inlined]"
"0","<0.1%","<0.1%","","","","","Proto_Mesh::get_grip_map() const [inlined]"
"0","<0.1%","0.2%","0.2%","","","","Proto_Mesh::renumber_local_cell_indices(std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int"
"0","<0.1%","<0.1%","","","","","Cell::Cell() [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::Work_Packet() [inlined]"
"0","<0.1%","<0.1%","","","","","pow@plt"
"0","<0.1%","<0.1%","","","","","std::vector<Region, std::allocator<Region> >::operator[](unsigned long) [inlined]"
"0","<0.1%","2.2%","2.2%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","<0.1%","","","","","Photon::set_distance_to_census(double) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","0.3%","0.3%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","0.5%","0.5%","","","","operator new(unsigned long)"
"0","<0.1%","<0.1%","","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >::operator+(long) const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__adjust_heap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","","","","","libmetis.isum"
"0","<0.1%","0.2%","0.2%","","","","libmetis__CoarsenGraph"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__MlevelRecursiveBisection"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__GrowBisection"
"0","<0.1%","<0.1%","","","","","random_r"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>::operator()<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","Proto_Mesh::get_boundary_neighbors() const"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_code_base<unsigned int, unsigned int, std::__detail::_Identity, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned int, false> const*, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","std::__detail::_Hash_node<unsigned int, false>::_M_next() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::flush<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&) [inlined]"
"0","<0.1%","<0.1%","","","","","Cell::Cell(Proto_Cell const&) [inlined]"
"0","<0.1%","0.9%","0.9%","","","","Source::Source(Mesh&, IMC_State&, unsigned long, double, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::new_allocator<Work_Packet>::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","","","","","Source::Source(Mesh&, IMC_State&, unsigned long, double, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","<0.1%","<0.1%","","","","Region::get_absorption_opacity(double) const [inlined]"
"0","<0.1%","1.7%","1.7%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","<0.1%","","","","","std::unordered_map<unsigned int, bool, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, bool> > >::operator[](unsigned int&&) [inlined]"
"0","<0.1%","<0.1%","","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","<0.1%","","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::operator[](unsigned long) [inlined]"
"0","<0.1%","<0.1%","","","","","operator new(unsigned long)@plt"
"0","<0.1%","<0.1%","","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::get_grip() const [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::set_cell(unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >::operator*() const [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::set_grip(unsigned int) [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::set_E0(double) [inlined]"
"0","<0.1%","<0.1%","","","","","Photon::set_position(double const*) [inlined]"
"0","<0.1%","<0.1%","","","","","Work_Packet::get_n_create() const [inlined]"
"0","<0.1%","<0.1%","","","","","std::ctype<char>::widen(char) const [inlined]"
"0","<0.1%","<0.1%","","","","","Source::get_photon(RNG*, double const&)"
"0","<0.1%","<0.1%","","","","","std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","100.0%","100.0%","2.5%","","","main(int, char**)"
"0","<0.1%","2.4%","2.4%","0.2%","","","replicate_mesh(Proto_Mesh&, MPI_Types const&, Info const&, unsigned int const&)"
"0","<0.1%","0.2%","0.2%","","","","Proto_Mesh::add_mesh_cell(Proto_Cell)"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::push_back(Proto_Cell const&) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_S_relocate(Proto_Cell*, Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_S_do_relocate(Proto_Cell*, Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell>&, std::integral_constant<bool, true>)"
"0","<0.1%","0.2%","0.2%","","","","std::__relocate_a<Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell> >(Proto_Cell*, Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","0.2%","0.2%","","","","std::__relocate_a_1<Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell> >(Proto_Cell*, Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","0.2%","0.2%","","","","std::__relocate_object_a<Proto_Cell, Proto_Cell, std::allocator<Proto_Cell> >(Proto_Cell*, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","0.2%","0.2%","","","","std::allocator_traits<std::allocator<Proto_Cell> >::construct<Proto_Cell, Proto_Cell>(std::allocator<Proto_Cell>&, Proto_Cell*, Proto_Cell&&)"
"0","<0.1%","0.2%","0.2%","","","","__gnu_cxx::new_allocator<Proto_Cell>::construct<Proto_Cell, Proto_Cell>(Proto_Cell*, Proto_Cell&&) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::_Vector_base<Proto_Cell, std::allocator<Proto_Cell> >::_M_deallocate(Proto_Cell*, unsigned long)"
"0","<0.1%","0.2%","0.2%","","","","std::allocator_traits<std::allocator<Proto_Cell> >::deallocate(std::allocator<Proto_Cell>&, Proto_Cell*, unsigned long)"
"0","<0.1%","0.2%","0.2%","","","","__gnu_cxx::new_allocator<Proto_Cell>::deallocate(Proto_Cell*, unsigned long) [inlined]"
"0","<0.1%","2.2%","2.2%","","","","ofi_intercept_munmap"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::push_back(Proto_Cell const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<Proto_Cell> >::construct<Proto_Cell, Proto_Cell const&>(std::allocator<Proto_Cell>&, Proto_Cell*, Proto_Cell const&)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<Proto_Cell>::construct<Proto_Cell, Proto_Cell const&>(Proto_Cell*, Proto_Cell const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","Buffer<Proto_Cell>::fill(std::vector<Proto_Cell, std::allocator<Proto_Cell> >) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(unsigned long, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >)"
"0","<0.1%","0.2%","0.2%","","","","std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*, Proto_Cell>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","0.2%","0.2%","","","","std::uninitialized_copy<__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*)"
"0","<0.1%","0.2%","0.2%","","","","std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*)"
"0","<0.1%","0.2%","0.2%","","","","std::_Construct<Proto_Cell, Proto_Cell const&>(Proto_Cell*, Proto_Cell const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::vector(std::vector<Proto_Cell, std::allocator<Proto_Cell> > const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::push_back(Proto_Cell&&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<Proto_Cell>::construct<Proto_Cell, Proto_Cell>(Proto_Cell*, Proto_Cell&&) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Buffer<Proto_Cell>, std::allocator<Buffer<Proto_Cell> > >::clear()"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Buffer<Proto_Cell>, std::allocator<Buffer<Proto_Cell> > >::_M_erase_at_end(Buffer<Proto_Cell>*)"
"0","<0.1%","0.2%","0.2%","","","","std::_Destroy<Buffer<Proto_Cell>*, Buffer<Proto_Cell> >(Buffer<Proto_Cell>*, Buffer<Proto_Cell>*, std::allocator<Buffer<Proto_Cell> >&)"
"0","<0.1%","0.2%","0.2%","","","","std::_Destroy<Buffer<Proto_Cell>*>(Buffer<Proto_Cell>*, Buffer<Proto_Cell>*)"
"0","<0.1%","0.2%","0.2%","","","","std::_Destroy_aux<false>::__destroy<Buffer<Proto_Cell>*>(Buffer<Proto_Cell>*, Buffer<Proto_Cell>*)"
"0","<0.1%","0.2%","0.2%","","","","std::_Destroy<Buffer<Proto_Cell> >(Buffer<Proto_Cell>*)"
"0","<0.1%","0.2%","0.2%","","","","Buffer<Proto_Cell>::~Buffer()"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::~vector()"
"0","<0.1%","0.2%","0.2%","","","","std::_Vector_base<Proto_Cell, std::allocator<Proto_Cell> >::~_Vector_base()"
"0","<0.1%","0.2%","0.2%","","","","systrim"
"0","<0.1%","0.2%","0.2%","","","","__default_morecore"
"0","<0.1%","0.2%","0.2%","","","","ofi_intercept_brk"
"0","<0.1%","0.4%","0.4%","","","","Proto_Mesh::set_post_decomposition_mesh_cells(std::vector<int, std::allocator<int"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::insert<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, void>(__gnu_cxx::__normal_iterator<Proto_Cell const*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, std::__false_type)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::_M_range_insert<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, std::forward_iterator_tag)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*, Proto_Cell>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*, std::allocator<Proto_Cell>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_copy<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, Proto_Cell*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Construct<Proto_Cell, Proto_Cell&>(Proto_Cell*, Proto_Cell&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<Proto_Cell, std::allocator<Proto_Cell> >::push_back(Proto_Cell const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<Proto_Cell, std::allocator<Proto_Cell> >::_M_allocate(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<Proto_Cell> >::allocate(std::allocator<Proto_Cell>&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<Proto_Cell>::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","0.3%","0.3%","","","","std::sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >)"
"0","<0.1%","0.3%","0.3%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","0.4%","0.4%","","","","std::__introsort_loop<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","0.2%","0.2%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","std::iter_swap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >) const"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Cell::operator<(Proto_Cell const&) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__partial_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__sort_heap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__pop_heap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","std::__move_median_to_first<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__adjust_heap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","std::__heap_select<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__make_heap<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","0.5%","0.5%","","","","METIS_PartGraphKway"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__SetupGraph"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__SetupGraph_tvwgt"
"0","<0.1%","0.5%","0.5%","","","","libmetis__MlevelKWayPartitioning"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__irandInRange"
"0","<0.1%","<0.1%","<0.1%","","","","rand"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__FreeGraph"
"0","<0.1%","<0.1%","<0.1%","","","","gk_free"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__InitKWayPartitioning"
"0","<0.1%","<0.1%","<0.1%","","","","METIS_PartGraphRecursive"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__MultilevelBisect"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__Init2WayPartition"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__Refine2Way"
"0","<0.1%","0.3%","0.3%","","","","libmetis__RefineKWay"
"0","<0.1%","<0.1%","<0.1%","","","","libmetis__ComputeKWayPartitionParams"
"0","<0.1%","0.5%","0.5%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","0.1%","0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<unsigned int&&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >*, std::piecewise_construct_t const&, std::tuple<unsigned int&&>&&, std::tuple<>&&)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<unsigned int&&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<unsigned int&&>&&, std::tuple<>&&)"
"0","<0.1%","0.4%","0.4%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >&, unsigned long)"
"0","<0.1%","0.4%","0.4%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","0.6%","0.6%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"
"0","<0.1%","0.6%","0.6%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> const*, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_buckets(unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::push_back(int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::_S_relocate(int*, int*, int*, std::allocator<int>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::_S_do_relocate(int*, int*, int*, std::allocator<int>&, std::integral_constant<bool, true>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__relocate_a_1<int, int>(int*, int*, int*, std::allocator<int>&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","Proto_Mesh::sort_cells_by_grip_ID()"
"0","<0.1%","0.1%","0.1%","","","","std::sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, bool (*)(Proto_Cell const&, Proto_Cell const&)>(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, bool (*)(Proto_Cell const&, Proto_Cell const&))"
"0","<0.1%","0.1%","0.1%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>) [inlined]"
"0","<0.1%","0.1%","0.1%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","0.1%","0.1%","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>::operator()<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__move_median_to_first<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell"
"0","<0.1%","<0.1%","<0.1%","","","","std::__sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)> >(__gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::__ops::_Val_comp_iter<bool (*)(Proto_Cell const&, Proto_Cell const&)>::operator()<Proto_Cell, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > > >(Proto_Cell&, __gnu_cxx::__normal_iterator<Proto_Cell*, std::vector<Proto_Cell, std::allocator<Proto_Cell> > >) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<int, std::allocator<int> >::~vector()"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<int, std::allocator<int> >::~_Vector_base()"
"0","<0.1%","1.1%","1.1%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::~unordered_map() [inlined]"
"0","<0.1%","0.6%","0.6%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()"
"0","<0.1%","0.6%","0.6%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*)"
"0","<0.1%","0.2%","0.2%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*)"
"0","<0.1%","0.2%","0.2%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*)"
"0","<0.1%","0.2%","0.2%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >&, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*, unsigned long)"
"0","<0.1%","0.2%","0.2%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*, unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::get_grip_map() const"
"0","<0.1%","0.2%","0.2%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<unsigned int const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >*, std::piecewise_construct_t const&, std::tuple<unsigned int const&>&&, std::tuple<>&&)"
"0","<0.1%","0.2%","0.2%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<unsigned int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<unsigned int const&>&&, std::tuple<>&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*) const"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::set_grip_ID_using_cell_index()"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::get_new_global_index_map() const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >::unordered_map(std::unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > > const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::operator()<std::pair<unsigned int const, unsigned int> const&>(std::pair<unsigned int const, unsigned int> const&) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::_M_allocate_node<std::pair<unsigned int const, unsigned int> const&>(std::pair<unsigned int const, unsigned int> const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> > >::construct<std::pair<unsigned int const, unsigned int>, std::pair<unsigned int const, unsigned int> const&>(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false> >&, std::pair<unsigned int const, unsigned int>*, std::pair<unsigned int const, unsigned int> const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int> >::insert(unsigned int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Insert<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true>::insert(unsigned int&&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, unsigned int, std::__detail::_Identity, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned int, false> const*, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned int, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned int, false>*) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::operator()<unsigned int>(unsigned int&&) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::_M_allocate_node<unsigned int>(unsigned int&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::allocate(std::allocator<std::__detail::_Hash_node<unsigned int, false> >&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned int, false> >::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int> >::find(unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_base<unsigned int, unsigned int, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<unsigned int, false>*) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_set<unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<unsigned int> >::~unordered_set() [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, unsigned int, std::allocator<unsigned int>, std::__detail::_Identity, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned int, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int const&, unsigned long, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::ostream::operator<<(std::ostream& (*)(std::ostream&))"
"0","<0.1%","<0.1%","<0.1%","","","","std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)"
"0","<0.1%","<0.1%","<0.1%","","","","Proto_Mesh::~Proto_Mesh()"
"0","<0.1%","0.9%","0.9%","<0.1%","","","imc_replicated_driver(Mesh&, IMC_State&, IMC_Parameters const&, MPI_Types const&, Info const&)"
"0","<0.1%","0.4%","0.4%","","","","std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","0.4%","0.4%","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::_S_relocate(Work_Packet*, Work_Packet*, Work_Packet*, std::allocator<Work_Packet>&)"
"0","<0.1%","0.4%","0.4%","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::_S_do_relocate(Work_Packet*, Work_Packet*, Work_Packet*, std::allocator<Work_Packet>&, std::integral_constant<bool, true>)"
"0","<0.1%","0.4%","0.4%","","","","std::__relocate_a<Work_Packet*, Work_Packet*, std::allocator<Work_Packet> >(Work_Packet*, Work_Packet*, Work_Packet*, std::allocator<Work_Packet>&)"
"0","<0.1%","0.3%","0.3%","","","","std::__relocate_a_1<Work_Packet*, Work_Packet*, std::allocator<Work_Packet> >(Work_Packet*, Work_Packet*, Work_Packet*, std::allocator<Work_Packet>&)"
"0","<0.1%","0.3%","0.3%","","","","std::__relocate_object_a<Work_Packet, Work_Packet, std::allocator<Work_Packet> >(Work_Packet*, Work_Packet*, std::allocator<Work_Packet>&)"
"0","<0.1%","0.3%","0.3%","","","","std::allocator_traits<std::allocator<Work_Packet> >::construct<Work_Packet, Work_Packet>(std::allocator<Work_Packet>&, Work_Packet*, Work_Packet&&)"
"0","<0.1%","0.5%","0.5%","","","","std::_Vector_base<Work_Packet, std::allocator<Work_Packet> >::_M_deallocate(Work_Packet*, unsigned long)"
"0","<0.1%","0.5%","0.5%","","","","std::allocator_traits<std::allocator<Work_Packet> >::deallocate(std::allocator<Work_Packet>&, Work_Packet*, unsigned long)"
"0","<0.1%","0.5%","0.5%","","","","__gnu_cxx::new_allocator<Work_Packet>::deallocate(Work_Packet*, unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Vector_base<Work_Packet, std::allocator<Work_Packet> >::_M_allocate(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<Work_Packet> >::allocate(std::allocator<Work_Packet>&, unsigned long)"
"0","<0.1%","0.2%","0.2%","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::push_back(Work_Packet const&)"
"0","<0.1%","0.2%","0.2%","","","","std::allocator_traits<std::allocator<Work_Packet> >::construct<Work_Packet, Work_Packet const&>(std::allocator<Work_Packet>&, Work_Packet*, Work_Packet const&)"
"0","<0.1%","<0.1%","<0.1%","","","","Mesh::get_emission_E() const"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move_a2<false, double const*, double*>(double const*, double const*, double*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","Mesh::get_census_E() const"
"0","<0.1%","96.2%","96.2%","1.9%","","","imc_replicated_driver(Mesh&, IMC_State&, IMC_Parameters const&, MPI_Types const&, Info const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_fill_n_a<double*, unsigned long, double, double>(double*, unsigned long, double const&, std::allocator<double>&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::uninitialized_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__uninitialized_fill_n<true>::__uninit_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&, std::random_access_iterator_tag)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__fill_a<double*, double>(double*, double*, double const&)"
"0","<0.1%","0.2%","0.2%","","","","std::unordered_map<unsigned int, bool, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, bool> > >::operator[](unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::_Scoped_node<std::piecewise_construct_t const&, std::tuple<unsigned int const&>, std::tuple<> >(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >*, std::piecewise_construct_t const&, std::tuple<unsigned int const&>&&, std::tuple<>&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<unsigned int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<unsigned int const&>&&, std::tuple<>&&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >&, unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >::allocate(unsigned long, void const*) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int const&) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> const*, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_allocate_buckets(unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*) const"
"0","<0.1%","0.8%","0.8%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","2.5%","2.5%","","","","std::sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, Work_Local_Map>(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, Work_Local_Map)"
"0","<0.1%","2.2%","2.2%","","","","std::__sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>) [inlined]"
"0","<0.1%","2.1%","2.1%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>)"
"0","<0.1%","2.1%","2.1%","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>)"
"0","<0.1%","0.6%","0.6%","","","","std::iter_swap<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > > >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >)"
"0","<0.1%","1.5%","1.5%","","","","__gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>::operator()<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > > >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >)"
"0","<0.1%","1.0%","1.0%","","","","Work_Local_Map::operator()(Work_Packet const&, Work_Packet const&)"
"0","<0.1%","0.3%","0.3%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned int const&, unsigned long) const"
"0","<0.1%","0.3%","0.3%","","","","std::__detail::_Hashtable_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(unsigned int const&, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(unsigned int const&, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned int const&, unsigned long, unsigned long) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, bool>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned int const&) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__move_median_to_first<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet"
"0","<0.1%","0.3%","0.3%","","","","std::__sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>)"
"0","<0.1%","0.3%","0.3%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>)"
"0","<0.1%","0.3%","0.3%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map> >(__gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >, __gnu_cxx::__ops::_Iter_comp_iter<Work_Local_Map>) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","__gnu_cxx::__ops::_Val_comp_iter<Work_Local_Map>::operator()<Work_Packet, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > > >(Work_Packet&, __gnu_cxx::__normal_iterator<Work_Packet*, std::vector<Work_Packet, std::allocator<Work_Packet> > >)"
"0","<0.1%","0.2%","0.2%","","","","std::unordered_map<unsigned int, bool, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, bool> > >::~unordered_map() [inlined]"
"0","<0.1%","0.1%","0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*)"
"0","<0.1%","0.1%","0.1%","","","","std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*)"
"0","<0.1%","0.1%","0.1%","","","","std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >&, std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*, unsigned long)"
"0","<0.1%","0.1%","0.1%","","","","__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false> >::deallocate(std::__detail::_Hash_node<std::pair<unsigned int const, bool>, false>*, unsigned long) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<unsigned int, std::pair<unsigned int const, bool>, std::allocator<std::pair<unsigned int const, bool> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Hash_code_base<unsigned int, std::pair<unsigned int const, unsigned int>, std::__detail::_Select1st, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned int const&) const"
"0","<0.1%","0.1%","0.1%","","","","Mesh::get_on_rank_cell(unsigned int) const"
"0","<0.1%","2.1%","2.1%","","","","r123::Threefry2x64_R<20u>::operator()(r123array2x64, r123array2x64)"
"0","<0.1%","<0.1%","<0.1%","","","","Cell::get_distance_to_boundary(double const*, double const*, unsigned int&) const"
"0","<0.1%","0.5%","0.5%","","","","get_uniform_angle(double*, RNG*)"
"0","<0.1%","<0.1%","<0.1%","","","","Photon::reflect(unsigned int)"
"0","<0.1%","0.1%","0.1%","","","","sample_emission_group(RNG*, Cell const&)"
"0","<0.1%","0.2%","0.2%","","","","Source::get_initial_census_photon(Photon&, Work_Packet&, double const&, double const&, RNG*)"
"0","<0.1%","0.2%","0.2%","","","","Work_Packet::uniform_position_in_cell(RNG*, double*) const"
"0","<0.1%","1.4%","1.4%","","","","Source::get_emission_photon(Photon&, Work_Packet&, double const&, double const&, RNG*)"
"0","<0.1%","<0.1%","<0.1%","","","","std::basic_ios<char, std::char_traits<char> >::widen(char) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::ctype<char>::widen(char) const"
"0","<0.1%","0.8%","0.8%","","","","std::vector<Photon, std::allocator<Photon"
"0","<0.1%","0.6%","0.6%","","","","std::vector<Photon, std::allocator<Photon> >::_S_relocate(Photon*, Photon*, Photon*, std::allocator<Photon>&)"
"0","<0.1%","0.6%","0.6%","","","","std::vector<Photon, std::allocator<Photon> >::_S_do_relocate(Photon*, Photon*, Photon*, std::allocator<Photon>&, std::integral_constant<bool, true>)"
"0","<0.1%","0.6%","0.6%","","","","std::__relocate_a<Photon*, Photon*, std::allocator<Photon> >(Photon*, Photon*, Photon*, std::allocator<Photon>&)"
"0","<0.1%","0.5%","0.5%","","","","std::__relocate_a_1<Photon*, Photon*, std::allocator<Photon> >(Photon*, Photon*, Photon*, std::allocator<Photon>&)"
"0","<0.1%","0.5%","0.5%","","","","std::__relocate_object_a<Photon, Photon, std::allocator<Photon> >(Photon*, Photon*, std::allocator<Photon>&)"
"0","<0.1%","0.5%","0.5%","","","","std::allocator_traits<std::allocator<Photon> >::construct<Photon, Photon>(std::allocator<Photon>&, Photon*, Photon&&)"
"0","<0.1%","1.6%","1.6%","","","","std::_Vector_base<Photon, std::allocator<Photon> >::_M_deallocate(Photon*, unsigned long)"
"0","<0.1%","1.6%","1.6%","","","","std::allocator_traits<std::allocator<Photon> >::deallocate(std::allocator<Photon>&, Photon*, unsigned long)"
"0","<0.1%","1.6%","1.6%","","","","__gnu_cxx::new_allocator<Photon>::deallocate(Photon*, unsigned long) [inlined]"
"0","<0.1%","0.4%","0.4%","","","","std::vector<Photon, std::allocator<Photon> >::push_back(Photon const&)"
"0","<0.1%","0.4%","0.4%","","","","std::allocator_traits<std::allocator<Photon> >::construct<Photon, Photon const&>(std::allocator<Photon>&, Photon*, Photon const&)"
"0","<0.1%","5.4%","5.4%","","","","std::sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > > >(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >)"
"0","<0.1%","5.4%","5.4%","","","","std::__sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","5.0%","5.0%","","","","std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","1.3%","1.3%","","","","std::__unguarded_partition<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","1.3%","1.3%","","","","std::iter_swap<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > > >(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >)"
"0","<0.1%","<0.1%","<0.1%","","","","__gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > > >(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >) const"
"0","<0.1%","<0.1%","<0.1%","","","","Photon::operator<(Photon const&) const"
"0","<0.1%","<0.1%","<0.1%","","","","std::__move_median_to_first<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter)"
"0","<0.1%","0.4%","0.4%","","","","std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon"
"0","<0.1%","0.4%","0.4%","","","","std::__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__normal_iterator<Photon*, std::vector<Photon, std::allocator<Photon> > >, __gnu_cxx::__ops::_Iter_less_iter) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","Timer::start_timer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)"
"0","<0.1%","<0.1%","<0.1%","","","","std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char"
"0","<0.1%","<0.1%","<0.1%","","","","std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, true>*, unsigned long) [inlined]"
"0","<0.1%","0.2%","0.2%","","","","Mesh::update_temperature(std::vector<double, std::allocator<double"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double> >::assign(unsigned long, double const&) [inlined]"
"0","<0.1%","<0.1%","<0.1%","","","","std::vector<double, std::allocator<double"
"0","<0.1%","0.2%","0.2%","0.2%","","","imc_replicated_driver(Mesh&, IMC_State&, IMC_Parameters const&, MPI_Types const&, Info const&)"
"0","<0.1%","0.5%","0.5%","","","","Source::~Source()"
"0","<0.1%","0.5%","0.5%","","","","std::vector<Work_Packet, std::allocator<Work_Packet> >::~vector()"
"0","<0.1%","0.5%","0.5%","","","","std::_Vector_base<Work_Packet, std::allocator<Work_Packet> >::~_Vector_base()"
"0","<0.1%","<0.1%","<0.1%","<0.1%","","","IMC_State::print_conservation(unsigned int)"
"0","<0.1%","1.2%","1.2%","","","","std::vector<Photon, std::allocator<Photon> >::operator=(std::vector<Photon, std::allocator<Photon> >&&)"
"0","<0.1%","1.2%","1.2%","","","","std::vector<Photon, std::allocator<Photon> >::_M_move_assign(std::vector<Photon, std::allocator<Photon> >&&, std::integral_constant<bool, true>)"
"0","<0.1%","1.4%","1.4%","","","","std::vector<Photon, std::allocator<Photon> >::~vector()"
"0","<0.1%","1.4%","1.4%","","","","std::_Vector_base<Photon, std::allocator<Photon> >::~_Vector_base()"
"0","<0.1%","<0.1%","<0.1%","","","","Mesh::initialize_physical_properties(Input const&)"
